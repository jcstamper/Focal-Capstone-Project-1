b'<?xml version="1.0" encoding="UTF-8"?>\n<!DOCTYPE workbook_page PUBLIC "-//Carnegie Mellon University//DTD Workbook Page MathML 3.8//EN" "http://oli.web.cmu.edu/dtd/oli_workbook_page_mathml_3_8.dtd"><workbook_page xmlns:bib="http://bibtexml.sf.net/" xmlns:cmd="http://oli.web.cmu.edu/content/metadata/2.1/" xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:pref="http://oli.web.cmu.edu/preferences/" xmlns:theme="http://oli.web.cmu.edu/presentation/" xmlns:wb="http://oli.web.cmu.edu/activity/workbook/" id="ca54d3de337f4247b27c5f7ae23dfd2a"><head><title>What is a Requirement?</title><objref idref="c9f8497753cb4836aae3e8011b861f25" /><objref idref="e99b5e46ffbd4390a6afd520ca445d95" /></head><body><p id="e2cd93e31cf441a2a1a9cf8c7a12bed6">The IEEE defines a <em style="italic">requirement</em> as a documented condition or capability needed by a user or system to meet a business need or achieve a business objective. Requirements become useful to the solution development process when they have been converted into specifications. Requirements must meet certain criteria to be useful for achieving business objectives. Let us define the general characteristics of a good requirement.</p><table id="c848a4d01b0f4fb8b766da9d4f8ccd40" summary="" rowstyle="plain"><cite id="iae14b307d4ad4e5e91db7891470e4aed" /><caption><p id="c9665bccf43e4607941f89479cf672df" /></caption><tr><td colspan="1" rowspan="1" align="left"><p id="bf38539142e1449e92bd01552699d7ed">Reading: <link href="http://www.cse.msu.edu/~cse870/IEEEXplore-SRS-template.pdf" target="new" internal="false">IEEE Guidelines on Software Requirements Gathering</link>.</p></td></tr></table><p id="a44e334f19324c6f88b6ad224949a5d8"><em>Characteristics of a Requirement </em></p><p id="bd5125978c5a4fb1b897519f8e5caf6b">A good requirement should be <em>complete</em> and <em>correct</em>. You must identify the relevant stakeholders and define a set of needs, goals, and objectives for your project. As there is no perfect scenario, you must define the constraints that are applicable to a project. Those constraints might include cost, scope, existing systems and processes, time, and technology. Defined scenarios can also result in identifying all the stakeholders and their needs within the business context. A requirement should also be <em>traceable</em>. This refers to tracking the life cycle of a requirement from its development to its specification and deployment in various versions of the solution. Traceability can be supported in a straightforward way via a matrix which associates a unique identifier, a description, and a design specification element to each requirement, as shown below.</p><table id="f9a40c7d7d9243dba2417e25e1c165b6" summary="" rowstyle="plain"><cite id="ibd1aef4b95b6481fbd25ba20f40aeb5e" /><caption><p id="eda4523bc7204f9d9fdbabbe945ccf08" /></caption><tr><td colspan="1" rowspan="1" align="left"><p id="f0d3f25b1c24459f8c3b210a1ec58e99">Requirement</p></td><td colspan="1" rowspan="1" align="left"><p id="b22b319827b54d87a28db5ce09688506">Design Specification</p></td></tr><tr><td colspan="1" rowspan="1" align="left"><p id="ba9d0266ee7d43739ae0adae0a18daaa">1.0.0 Consumption reports should be integrated with the Dashboard API.</p></td><td colspan="1" rowspan="1" align="left"><p id="cacf4e8e980d46459ccfe96822c8aaa2">Data from the hourly consumption report will use data_integrate_trail in the Update event procedure.</p></td></tr></table><p id="cf48caf951be4278b972b32532c3df32">A requirement should be <em>unambiguous</em>. Given that the requirements gathering process involves contributions from multiple stakeholders, the requirement should be explicit and clear to all. It should have the same meaning to everyone involved and not be open to interpretation. Unambiguous requirements must have defined acceptance criteria, metrics for success, expected outcomes, and acceptable values. The use of an active voice in its description will make a requirement clearer. Finally, a requirement should be <em>verifiable</em>. Testers should be able to verify that the requirement is implemented correctly. A requirement is considered complete when it is verifiable, unambiguous, and traceable.</p><example id="a339e72e56f643948f13721d86cebb24"><title>Title</title><p id="f69724deaed2458f9f097cc39b6b1c74">Consider this requirement for a report-generating solution: </p><p id="be06e5b73db54994b8104fae2dc3c707"><em style="italic">The consumption reports will be generated and displayed. </em></p><p id="a8c0fab2103a4c20bee4526a7c15f93b">This requirement leaves room for interpretation, and this can lead to not meeting client expectations. A better representation of the requirement is to include a time frame, a responsible party, and a deliverable. </p><p id="a08655b8e32a44459c31a92f13e02b8e"><em style="italic">The system will automatically generate the consumption reports every 30 minutes, and the results will be displayed on the consumption dashboard. </em></p><table id="aa95d86a679142fcb4165deb7a6e03b7" summary="" rowstyle="plain"><cite id="iaf6b5e11a9e340fda2a3889edbb3ef6b" /><caption><p id="e31544d177d346dcaf65d3e7ca6bd004" /></caption><tr><td colspan="1" rowspan="1" align="left"><p id="fab64a71b66e4d65a1255b9be2774382">Reading: <link href="https://en.wikipedia.org/wiki/Requirements_traceability" target="new" internal="false">Traceability in Requirements and Other Artifacts</link>.</p></td></tr></table></example><wb:inline idref="newd8c0479a8d6a47a6a4025e4bea4c17fe" purpose="didigetthis" /></body></workbook_page>\n'
b'<?xml version="1.0" encoding="UTF-8"?>\n<!DOCTYPE workbook_page PUBLIC "-//Carnegie Mellon University//DTD Workbook Page MathML 3.8//EN" "http://oli.web.cmu.edu/dtd/oli_workbook_page_mathml_3_8.dtd"><workbook_page xmlns:bib="http://bibtexml.sf.net/" xmlns:cmd="http://oli.web.cmu.edu/content/metadata/2.1/" xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:pref="http://oli.web.cmu.edu/preferences/" xmlns:theme="http://oli.web.cmu.edu/presentation/" xmlns:wb="http://oli.web.cmu.edu/activity/workbook/" id="cd851369a8ed4a40a657f8c066ccaaad"><head><title>The Three Environments for AI Professionals - Research, Development, and Production</title></head><body><p id="bbc0a1226ca14ed580593791c7a6932e">The individuals who want to pursue skills required for data roles like Applied Engineer, Data Analyst, Data Engineer, Data Scientist, Data Solutions Architect, Machine Learning Engineer, Research Scientist, etc., are confused because the fields are relatively new, and there is a lot of overlap between these roles. Moreover, the definitions of the roles and skills required are different for different organizations because organizations have a different understanding of each role based on their requirements, organizational culture, and allocated budget.</p><p id="eddce42134584560a1e3e95e8dee1318">This chapter introduces three different environments for AI professionals and focuses on different tasks and skills required for each environment. In general, a good AI professional needs to be aware of the basics of all three environments and be an expert in some tasks in at least one environment. Based on her interest and expertise in tasks of environments, she can further pursue skills in depth and expand their skill set. Awareness of these environments can help individuals avoid confusion while making career decisions in the dynamic data world.</p><p id="d36669fa21e0490183a3a46ee46d60eb"><em>Research Environment: </em></p><p id="b9f144a37e764a5a868934a3750e8eb8">AI professionals first collaborate with stakeholders and domain experts to understand and define the business problem. They might also present and validate assumptions related to the problem. Once the problem is defined, and assumptions are validated, AI professionals can start working in the research environment.</p><p id="c8bab584efc04b20b20e741be2a57cae">A research environment is where AI professionals define experiments and might use tools like Jupyter Notebook and Jupyter Lab to collect data, clean it, perform Exploratory Data Analysis (EDA), and present findings to the team. Each experiment&apos;s findings might help select and generate new features from data and build models that can potentially solve the problem. Later, metrics are defined to evaluate and select models across different experiments. Sometimes, an ensemble of models from different experiments might result in higher performance. The code might be very messy in this environment or phase. It might also be hard for others to run your code and/or reproduce your results successfully on their machines.</p><p id="ea10147ac18746f89e6921d746a6636e">The different steps in the research environment include:</p><ol id="db1c64e77d9246d4ab44bba4e661aa2e"><li><p id="abe849ef855b4aa893d431e8e56c9b77"><em>Define Experiments: </em>Different experiments can be defined based on the definition of the problem. For example, suppose we have a classification problem. In that case, experiments might be defined based on different approaches like conventional supervised learning, weak supervision active learning, semi-supervised learning, pre-training, etc. Experiments are prioritized based on the type, project timeline, and quantity and quality of data. </p></li><li><p id="db74d0597b414cdcb18e6ec9dc92c0e4"><em>Data Collection: </em>For a given experiment, the AI professional might collect structured or unstructured data from existing proprietary databases, use open-source datasets, or extract data using python scripts like crawling text or images from relevant websites. </p></li><li><p id="a5a20db0f3dd4eedb90a52f7008e9889"><em>Data Cleaning: </em>The steps in cleaning depend on the data, problem, and experiment. For example, AI professionals can impute missing values, normalize extreme values, remove duplicate samples, etc., to classify structured data.</p></li><li><p id="f84bb6b5a7214905a35381f10100ac18"><em>Exploratory Data Analysis (EDA): </em>The goal of EDA is to find patterns in cleaned data which helps in selecting relevant features for modeling and understanding relationships among them. EDA can also help identify how to further clean the data for modeling.</p></li><li><p id="ca1a1e82f592425dbdfe193092a7be55"><em>Feature Engineering: </em>The knowledge from domain experts and EDA patterns help AI professionals create new features that might increase the performance of models in the experiment. Remember that generating relevant new features from existing features is called feature engineering.</p></li><li><p id="cb632388acd34fbe91e951b681b44bb4"><em>Data Modeling: </em>The goal of a model is to try to replicate domain experts\xe2\x80\x99 decision-making process. AI professionals come up with mathematical algorithms and build models using relevant features to automate the decision-making process. </p></li><li><p id="c9d63fc686664701968d8ff50266d9b6"><em>Tuning and Evaluation: </em>Optimal hyperparameters can be found to maximize the model performance by comparing the metrics of each version of the model in an experiment on evaluation data. </p></li><li><p id="ad39cf07fa45470e8fc72db208da8b5c"><em>Experiments Tracking and Evaluation: </em> Steps 2 to 7 are repeated for each experiment and evaluated at the end. Experiment tracking tools like <link href="https://neptune.ai/" target="new" internal="false">Neptune AI</link> and <link href="https://wandb.ai/site/experiment-tracking" target="new" internal="false">Weights and Biases</link> can efficiently track experiment information with a good user interface.</p></li></ol><p id="d8a88d05f5f645248c679060665bdfa7">The model in an experiment with the highest performance is selected for working further in the development environment.</p><p id="c9f048adb1254afe884019ef71c1fdfd"><em>Development Environment:</em></p><p id="d699fa1790f3483583abde0c728e2c50">A development environment is where AI professionals create components by cleaning and modularising code from, e.g., Jupyter notebooks, adding dependencies (PyTorch, Numpy, and Pandas, etc.), and packaging them. A component is an organized, modular, maintainable, and reusable code that performs one step, like data extraction in the AI/ML pipeline.</p><p id="acd5fb3acfa0489faff71030c9bf592f">In applied machine learning, the AI/ML Pipeline automates performing a sequence of steps in components and interaction between the components defined by the AI/ML system design. The components include data collection, data preprocessing, model development and fine-tuning, post-processing on predictions, model evaluation, model deployment, maintenance, and monitoring.</p><p id="dbf9616f1dce4306bf569977e36d8c0d"><em>Some best practices while packaging the code:</em></p><ol id="dcbc9f7156b4474e965a2c16dc4ce507"><li><p id="c662f678e41740068990865491c785dc">Use a version control tool. Version control plays a crucial role in the development environment. Version control tools like <link href="https://www.perforce.com/" target="new" internal="false">perforce</link> and <link href="https://get.assembla.com/" target="new" internal="false">assembla</link> make the processes like creating a GIT repository, defining the code repository structure, and branching strategy easy. </p></li><li><p id="d5dcbbbe6e3b44fbb22453a635a2c149">Install IDE like PyCharm to automatically create virtual environments for projects and allow easy integration with GIT.</p></li><li><p id="ba35e5b0325d41e9953b74a37d356d93">Convert Jupyter Notebook code into object-oriented code and save in .py files. Have appropriate variable names, add comments, and organize different files into components with proper hierarchy. </p></li><li><p id="a2648b5955ef40d0b611f0cf04f8ebd2">Create config files containing standard information across multiple components like input file location, model location, output file location, cloud or external API credentials, model parameter values, hyperparameters values, etc. Config files make adding new variables easy for all components across the pipeline and modifying and removing existing variables.</p></li><li><p id="e33b3397ad6a4fb3aa375965a1ab0cc1">Write and automate tests for multiple components. Write modules to test each component individually (unit testing) and test the interaction between components (integrating testing).</p></li><li><p id="a5c3462d2a634b8abce8e1e62fe6b3ef">Use a logger to log the message and time. Logging makes debugging easy, especially when the code base becomes huge and complex. A logging message can have a logging level like critical, error, warning, info, debug, or notset. Critical is an essential message to log, and notset is an unimportant message to log. Levels ensure the minimum level to log. For example, if you set \xe2\x80\x9clevel = logging.warning\xe2\x80\x9d, any message logged as critical, error, or warning is only logged, and other levels are ignored.</p></li><li><p id="fd9d0f7e3d5b4830bee504d3482f858a">Unlike traditional software engineering where only changes in code are tracked (code versioning), data used for training, testing, and evaluation can also be tracked (data versioning) especially if data is large and dynamic. <link href="https://dvc.org/" target="new" internal="false">DVC</link>, <link href="https://delta.io/" target="new" internal="false">Delta Lake</link>, and <link href="https://lakefs.io/" target="new" internal="false">LakeFS</link> are some open-source data versioning tools.</p></li><li><p id="c53c9a13791d405fa094e39f09b8a921">Often based on the requirement, a server is built using web frameworks like FastAPI, Flask, or Django to deliver predictions to other software components. </p></li></ol><p id="ba845a1b0ca54c739d3693eaed676742">The packaged code is further used in the production environment.</p><p id="ef9527207b3841c3a8e9323d8651c645"><em>Production Environment:</em></p><p id="b6d9da33f990499ca8854b4831bd04e4">Based on the size and timeline of the project, development and production environments are the same or different. Generally, the production environment is a phase where the models in the pipeline are scalable, monitored, and served in real-time by containers.</p><p id="a25ee079cd214b708764034cbb2c5431"><em>Some of the tasks performed in the production environment are:</em></p><ol id="f625b1c1440d4666a995913b395c651c"><li><p id="c2bab377366e45eaa40bf88f57be9e14"><em>Design Optimization:</em> In general, there is a lot of gap between the number of models and the quality of models in the research environment, development environment, and production environment. Hence, if required, the AI/ML system design created before in the development environment needs to be optimized and redesigned for production.</p></li><li><p id="e236b406662f4ed091f6379403e1a547"><em>Containerization using Docker:</em> Developers might use multiple components like Data Extractor, Elastic Search, Rest API, Messaging Queues, etc. Each component has its respective dependency libraries. Having components with different versions of a library in the same environment might lead to conflict. With the help of Docker, AI Professionals can standardize environments and run different containers for different components in isolation, where each container has dependent libraries for the respective component. An environment can be created by Docker using a DockerFile. DockerFile contains instructions like navigating to a respective folder, installing dependencies, setting environment variables, loading configuration parameters for the model, etc. Scaling is easy with containers because AI professionals can spin up new containers for the same component in seconds to satisfy the scaling requirements. </p></li><li><p id="e7f6ddc3d609423596c8e73cbccec29b"><em>Continuous Integration and Continuous Delivery (CI/CD): </em>CI/CD enables AI professionals to work together in a shared code repository where updates to a part of code by an individual are automatically pushed, built, tested, delivered, and deployed to the shared code repository, and code issues can be tracked and resolved respectively</p></li><li><p id="ee2950ac777b4223a2d413045027135e"><em>Workflow Orchestration and Infrastructure Abstraction: </em>Workflow Orchestration tools like Google\xe2\x80\x99s Kubernetes and Red Hat&apos;s Openshift can quickly spin up multiple containers on different machines on demand, manage resources like memory and compute for containers, have high container availability for the product. Depending on the organization, the infrastructure of the workflow orchestration tool is owned by separate teams like DevOps or the AI professionals themselves. Some AI professionals might find it tedious to work with infrastructure abstraction tools. They can use infrastructure abstraction tools like Google\xe2\x80\x99s <link href="https://www.kubeflow.org/" target="new" internal="false">Kubeflow</link> and Netflix\xe2\x80\x99s <link href="https://metaflow.org/" target="new" internal="false">Metaflow</link>, which are built on top of workflow orchestration tools that allow them to focus more on models and stop worrying about low-level infrastructure. </p></li><li><p id="bc0223a66bd64fb69e9a325f2bf1cce6"><em>Monitoring and Maintaining the Deployed Models: </em>Unlike traditional software, AI/ML models are dynamic and degrade over time. Hence, it is essential to measure, monitor, and govern the different metrics and tune models before they negatively impact user experience and business value. In general, the model\xe2\x80\x99s health can be measured by three different metrics.</p></li><li><ol id="cfd3d1db7d594c11ad41631559dbd71b"><li><p id="bc8c2e6feb7740aca24a52570df58aa0"><em>Resource Metrics: </em>These measure incoming traffic, CPU/GPU memory usage or utilization (Does server efficiently utilize resources?), prediction latency (Does server handle requests quickly?), throughput (Does server maintains good throughput and scales based on requests?), and cost (Are hosting and inference costs of the entire ML pipeline are as expected or more?).</p></li><li><p id="d3c026986dca4066ae151696603e2b54"><em>Data Metrics:</em> It is essential to check if the input data format is correct first instead of debugging the entire pipeline. </p></li><li><ol id="bd0d739bccc440c38b59d8ef9cf3aab8"><li><p id="a22fbf07cd6143b7882180948021b18f"><em>Anomaly Checks:</em> Simple checks like having max and minimum values for each feature (age cannot be negative or 100000) can identify and validate extreme or anomalous data points in input data. Later, the team can brainstorm and find root causes for receiving these anomalies from users.</p></li><li><p id="b8a06ae1d7274e7f923d2332753e65d5"><em>Data Quality Issues:</em> Users might give synonyms (\xe2\x80\x9cGirl\xe2\x80\x9d for \xe2\x80\x9cFemale\xe2\x80\x9d) or incorrect values (\xe2\x80\x9cMail\xe2\x80\x9d instead of \xe2\x80\x9cMale\xe2\x80\x9d) as input to the pipeline. In these cases, the model might fail to recognize the value in the feature \xe2\x80\x9cGender\xe2\x80\x9d (data might be absent while training the model) and assign NaN (not a number) for the feature. Even though the model doesn\xe2\x80\x99t break, the predictions produced by the model might be wrong. Hence, testing new data that the model hasn\xe2\x80\x99t seen before is essential.</p></li><li><p id="fb7329df16e64ddfada7b5b0c0653a4d"><em>Data Drift:</em> When we train a model with some static data, it assumes specific patterns based on the distribution of provided data. However, real-world data is dynamic. Because of these changes, the assumptions made by the model might no longer be valid, and the model might get biased, which leads to bad performance in real-time model evaluation. For example, water consumption in hospitals during COVID-19 was very high compared to historical data. Hence, we cannot use a model built on historical water consumption data during COVID-19. This phenomenon is called \xe2\x80\x9cData Drift.\xe2\x80\x9d Periodically detecting changes in the distribution of data using statistical tests can help to detect data drift.</p></li></ol></li><li><p id="e603105230a04eeebaf4e0fac95093cf"><em>Model Metrics:</em> It is crucial to estimate the expected performance of models before deploying them into production and periodically check if expected KPIs are met. If model predictions or expected KPI values are bad compared to benchmarks, AI professionals might consider the Model Drift issue. Model Drift is a phenomenon where the relationship between features changes, and the model no longer gives accurate predictions. For example, the relationship between the births and deaths ratio changed during COVID-19 causing model drift. Model drift can be detected by periodically analyzing feedback from feedback loops and correlating it with what is affecting the business.</p></li><li><p id="f2fd26b23c87429098660ef08bd3f096"><em>Monitoring:</em> Based on Model Metrics and Data Metrics, if re-training is required, the AI professional might start repeating the research, development, and production environment to deploy and monitor the new model. Often, retraining is also a way to improve the model&apos;s performance to reflect the change in data over time. Some of the Data Monitoring tools include <link href="https://superwise.ai/" target="new" internal="false">SuperwiseAI</link>, <link href="https://arthur.ai/" target="new" internal="false">ArtherAI</link> , and <link href="https://www.verta.ai/platform/model-monitoring" target="new" internal="false">VertaAL</link>. </p></li></ol></li></ol><p id="a0e192ab18824a9f893959cee7c203a9"><em>Conclusion:</em></p><p id="e6092bd3058c4727a7ee9b323c6464c5">It is good for any individual who wants to make a career in AI to be aware of the basics of all three environments. This awareness can help individuals to identify the skills required to work in an environment. Based on their interest, they can choose to specialize in one or more of these three environments and eventually make their career decisions in the current rapidly changing data world.</p><wb:inline idref="mooclet_activity" purpose="didigetthis" /></body></workbook_page>\n'
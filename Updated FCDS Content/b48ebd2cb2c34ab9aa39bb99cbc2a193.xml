b'<?xml version="1.0" encoding="UTF-8"?>\n<!DOCTYPE workbook_page PUBLIC "-//Carnegie Mellon University//DTD Workbook Page MathML 3.8//EN" "http://oli.web.cmu.edu/dtd/oli_workbook_page_mathml_3_8.dtd"><workbook_page xmlns:bib="http://bibtexml.sf.net/" xmlns:cmd="http://oli.web.cmu.edu/content/metadata/2.1/" xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:pref="http://oli.web.cmu.edu/preferences/" xmlns:theme="http://oli.web.cmu.edu/presentation/" xmlns:wb="http://oli.web.cmu.edu/activity/workbook/" id="b48ebd2cb2c34ab9aa39bb99cbc2a193"><head><title>Functional and Non-Functional Requirements </title><objref idref="fddc9352f8594dcf9e301b1159522f8d" /><objref idref="c9f8497753cb4836aae3e8011b861f25" /></head><body><table id="d3312ba6f5d64ceba840c66f10185b65" summary="" rowstyle="plain"><cite id="if8015b5edb1748f79395d1af3dd164a0" /><caption><p id="fbf1f4c5f8754d29a004a4a694772c8f" /></caption><tr><td colspan="1" rowspan="1" align="left"><p id="c32153b5f8654970b61dcd7c1067b5a5"><em>Reminder: </em>The data science process emphasizes understanding business needs and objectives and defining analytic objectives to meet the expectations of the client. The requirements gathering process will involve identifying the stakeholders, eliciting needs, and defining requirements. The difference between the requirements of a traditional IT project and those of a data science project is the focus on the requirements for the analytic solution. </p></td></tr></table><p id="ed25adaa8fc84257bdb79e86b3879a51"><em>Functional Requirements </em></p><p id="d1dc0a85fc4449228a88a378bb806aa1">Functional requirements define the functions of a system and how users will interact with the system. Functional requirements are derived from the user and system requirements that are needed to satisfy the business requirements. In essence, defining the right business requirements will result in useful functional requirements that can be used to develop the proposed system. As mentioned earlier, user requirements are captured in use cases, and those use cases can help the project team define the functional requirements. A <em style="italic">use case </em>will describe the interaction between the system and its users, also known as <em style="italic">actors</em>. The interactions between the system and the user are known as <em style="italic">goals</em>.</p><p id="e2cc7db46f784ab7982f848b689b0085">Not all functional requirements are implemented in the first iteration of solution development. This is why functional requirements are organized by priority. High-priority functional requirements must be implemented to meet the business objectives. Medium and low priority functional requirements are important but typically classed as requirements that will not affect the current business objectives. These requirements may also be implemented in later iterations or updates to the system.</p><table id="f11ec6c0f0424493acbc0f5040faf4f1" summary="" rowstyle="plain"><cite id="ic6e96037a74c4531811f77437e5f0007" /><caption><p id="a1309b41b89d492cb2dce48ea0a6aa4b" /></caption><tr><td colspan="1" rowspan="1" align="left"><p id="a765a67655f54d05af4bf8dc3b25fd3f">Traditional functional requirements considered in the software and application development process include Business Rules, Process Flows, Audit Tracking, Transaction Handling, Reporting Requirements, Administration Functions, Authorization Requirements, and Data Management.</p><p id="e3c4138fb4e946a6b38154c4ba764249">Reading: <link href="https://ieeexplore.ieee.org/document/720574" target="new" internal="false">IEEE ANSI 830 Documentation on Functional Requirements.</link></p></td></tr></table><p id="aaaaf04c54ce4f11ae02684f74f5541a">Requirements can be captured in different formats, including user stories, use case specifications, the voice of the customer, and business rules. This unit will focus on defining functional requirements from use case specifications.</p><p id="e69a1e8e5c1d46c5ab8d05e472eba768"><em>Decomposing User Requirements into Functional Requirements</em></p><p id="e6adb8ee27d9442bbbd3f5b562809821">Initial user requirements are often written too broadly to unambiguously define what the proposed system should do at each step in a solution. The danger is that the software provider will produce a system that may not meet the business objectives because it misunderstands what the customer would consider an acceptable solution. Different forms of use case analysis are typically used to capture, discuss, and verify the details of a solution with the customer. For each expected capability or interaction (functional requirement), we work with the customer to write detailed use specifications and gather them into a single document.</p><p id="aea48c26dca5407b8945dcdcc40a8e9a">The use case specification provides a textual description of a use case. As mentioned earlier, it will decompose a user requirement into functional requirements. The use case specification details the steps involved in a goal or action. Figure 1 below shows the sections of a use case specification:</p><image id="daae33fa51db480e8afdd43ce49bf6f1" src="../webcontent/Use_Case.jpg" alt="" style="inline" vertical-align="middle" height="371" width="650"><caption><p id="c7de7dc1d6e043d6829bc6b071d5a8c6">Figure 1. Use Case Specification</p></caption><popout enable="false"></popout></image><example id="a54dfac7fe654ab6a0583d11be716fba"><p id="c9d32529bfb844b09fb91f6bf6428de4">A business analyst (BA) has distributed questionnaires to elicit the needs of stakeholders for a proposed system for their customers. The BA analyzed the information from the questionnaire and defined some user requirements. One of the user requirements is customers\xe2\x80\x99 ability to update their billing address in the new system. This requirement describes what customers can do with the solution, but it is still too ambiguous and does not tell a developer what the system should do at each step of this requirement. We will illustrate how we can simply decompose that user requirement into functional requirements. </p><p id="cbabbda842794ae3a19ebe8126507135"><em>Use Case/User Requirement:</em> Update billing address. </p><p id="ec2dada4d39348ad8ab452482373d72a"><em style="italic">How can a customer perform this task within the system?</em></p><p id="f478b681d4d54a1eb666a1f5c2910d0f"><em>Functional Requirement for Customers (1):</em></p><p id="cf8d8eede34044c1924fd094147f7341">(1) The user shall be able to view the billing addresses in the system.</p><p id="d42ff4db0d504afcae2a10ef79f37d49">(2) The user shall be able to update a billing address in the system. </p><p id="c43fce6ba79b4083b8d54254f5e30b45"><em>Functional Requirement (2):</em></p><p id="dfc5f548d50c4ac08df4f02fed98dcc0"><em style="italic">How will the system confirm that the billing address has been updated? </em></p><p id="e6b755f6df3f4fb1bf5be1da8ed92249">(2) The system shall display updated customer service and billing addresses. </p><p id="ed88326c90414c7da36519b9e35103c8"><em style="italic">We know that a requirement must be verifiable, traceable, and unambiguous to be considered a complete requirement. The Business Analyst must ensure that these functional requirements meet the criteria for a good requirement. </em></p><table id="d7008bcd192a4265a2edd1259c31045f" summary="" rowstyle="plain"><cite id="i7a1a7dced110451f890820e2f87a68b5" /><caption><p id="f6332020ffe04e09810982d29ca04a09" /></caption><tr><td colspan="1" rowspan="1" align="left"><p id="f0ae525e90ac4dd7987a48c304a75194">Functional requirements considered in the software and application development process include the business rules, user and system authorization levels, authentication, and regulatory requirements. </p></td></tr></table></example><p id="db446c6deb294e0195d23e95af7c877e"><em>Non-Functional Requirements</em></p><p id="dfe7da1456124b9d8fcce16922c2e6c8">Non-functional requirements (NFR) describe the performance and behavior of a system. They are also referred to as operational requirements. The NFRs for a traditional IT project will describe the attributes of a system, including the system&apos;s scalability, usability, maintainability, performance, reliability, availability, capacity, interoperability, and security.</p><table id="a2ab7eebb86948f5944409ae342a3f36" summary="" rowstyle="plain"><cite id="ie76f3551b3d8482785c9cceaad4c9c8e" /><caption><p id="dd7efec43f20456dbc1245bb7b48ad97" /></caption><tr><td colspan="1" rowspan="1" align="left"><p id="d8fa10ad1eec44d2a07e702a4f6cdb5c">Availability</p></td><td colspan="1" rowspan="1" align="left"><p id="aa9652a1d4384956a5dc101b0ad4e16b">Refers to a property of software that is there and ready to carry out its task when you need it to.</p></td></tr><tr><td colspan="1" rowspan="1" align="left"><p id="a0c22044a9cb42368682fcefbbb6bb56">Interoperability</p></td><td colspan="1" rowspan="1" align="left"><p id="d5a535545bcf4e3d8679955e6b7cba17">Interoperability refers to the degree two or more systems can usefully exchange meaningful information via interfaces in a particular context.</p></td></tr><tr><td colspan="1" rowspan="1" align="left"><p id="df158b1032f4403a873ba83137fbc984">Modifiability</p></td><td colspan="1" rowspan="1" align="left"><p id="a336bd1d64c644feab5a5dd0aee816eb">Modifiability refers to the ease of modifying the system with minimal changes to the architecture.</p></td></tr><tr><td colspan="1" rowspan="1" align="left"><p id="d3daf9cd525249668c5697ffa9d74473">Performance</p></td><td colspan="1" rowspan="1" align="left"><p id="dea28986f9c94bc29d92e93818efdb01">Performance refers to the software system\xe2\x80\x99s ability to meet timing requirements. When events occur\xe2\x80\x94interrupts, messages, requests from users or other systems, or clock events marking the passage of time\xe2\x80\x94the system, or some element of the system, must respond to them in time.</p></td></tr><tr><td colspan="1" rowspan="1" align="left"><p id="dfbbe85fec2146f0b6c0780eb3456edf">Security</p></td><td colspan="1" rowspan="1" align="left"><p id="ef0812d01dbe48fe97ebecf57099fb6f">Security refers to the system\xe2\x80\x99s ability to protect data and information from unauthorized access while still providing access to people and systems that are authorized.</p></td></tr><tr><td colspan="1" rowspan="1" align="left"><p id="ca4d7945015344d99daaefa8795336d3">Testability</p></td><td colspan="1" rowspan="1" align="left"><p id="aa620ecdb3e047ab98b2c707e20b7288">Software testability refers to the ease with which software can be made to demonstrate its faults through (typically execution-based) testing. Specifically, testability refers to the probability that the software will fail on its next test execution, assuming that it has at least one fault.</p></td></tr><tr><td colspan="1" rowspan="1" align="left"><p id="f20afd246f124a44b7aee216aec92d16">Usability</p></td><td colspan="1" rowspan="1" align="left"><p id="d4123ed08f0f4ab3b029d2f0b17ac3eb">Usability is concerned with how easy it is for the user to accomplish the desired task and the kind of user support the system provides. Over the years, a focus on usability has shown itself to be one of the cheapest and easiest ways to improve a system\xe2\x80\x99s quality (or, more precisely, the user\xe2\x80\x99s perception of quality).</p></td></tr><tr><td colspan="1" rowspan="1" align="left"><p id="b0dec2d797814d44bb77a312564bab56">Scalability</p></td><td colspan="1" rowspan="1" align="left"><p id="a04628295ec54bfca27d28eab1636d8d">Scalability refers to the ease of adding new resources to a system to cope with increasing demands on its use.</p></td></tr><tr><td colspan="1" rowspan="1" align="left"><p id="c9251a4f92a94bceb2a559124e4a777c">Observability / Monitorability</p></td><td colspan="1" rowspan="1" align="left"><p id="d34d2df4edc147148c39e06d30f03d79">These refer to the ability of the operations staff to monitor the system while it is in operation.</p></td></tr><tr><td colspan="1" rowspan="1" align="left"><p id="b5e2b31ed6534953be92c0db20e03759">Portability and Compatibility</p></td><td colspan="1" rowspan="1" align="left"><p id="f2769df84c2c4276a975e847151bd5eb">These refer to the compatibility of the hardware, systems, application software, and solution with other applications and processes within the existing environment.</p></td></tr><tr><td colspan="1" rowspan="1" align="left"><p id="e674df07507f40dfa45fefcd055ad3aa">Modules and Architecture</p></td><td colspan="1" rowspan="1" align="left"><p id="e8e6082727e14683aa8234569104fd06">These refer to the technical considerations for the system, including operating system compatibility and the programming development environment employed by the developers.</p></td></tr></table><p id="bafd8c3e46f8453c8edf0c939043c48a">Non-functional requirements focus on the user experience and take into account the system and application software and data compliance rules. Framing a non-functional requirement for a data science project will include the above-mentioned attributes and additional requirements that are related to machine learning models and AI analytic solution(s).</p><wb:inline idref="newe0716f25fc5745349105335f247c8684" purpose="didigetthis" /></body></workbook_page>\n'
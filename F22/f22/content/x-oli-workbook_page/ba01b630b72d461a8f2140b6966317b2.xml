b'<?xml version="1.0" encoding="UTF-8"?>\n<!DOCTYPE workbook_page PUBLIC "-//Carnegie Mellon University//DTD Workbook Page MathML 3.8//EN" "http://oli.web.cmu.edu/dtd/oli_workbook_page_mathml_3_8.dtd"><workbook_page xmlns:bib="http://bibtexml.sf.net/" xmlns:cmd="http://oli.web.cmu.edu/content/metadata/2.1/" xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:pref="http://oli.web.cmu.edu/preferences/" xmlns:theme="http://oli.web.cmu.edu/presentation/" xmlns:wb="http://oli.web.cmu.edu/activity/workbook/" id="ba01b630b72d461a8f2140b6966317b2"><head><title>The Vision Document</title></head><body><p id="fd64b0dd3f8d42f2be8ad1a9bed32a58">The important components of a vision document are described as follows:</p><ul id="b53c3d521af34e42b2e265893c32c9d2"><li><p id="ecec0731097a4ea48dc10628616e1b69"><em>Problem Description.</em> First, you need to determine the real-world problem that you are trying to address. You should also look into the literature to identify existing solutions and their limitations. Your goal is to propose an improvement to these solutions in some ways so as to yield tangible social or business impacts.</p></li><li><p id="a604a1da34804bbea03a86275353472e"><em>Proposed Solution.</em> Next, come up with an overarching framework for your solution. An example solution formulation could be \xe2\x80\x9cA framework that supports a declarative description of a configuration space and automatically evaluates all the options, finding the best given some measure and labeled dataset.\xe2\x80\x9d Compare your solution with the existing solutions identified previously. What makes your solution better?</p></li><li><p id="f33e83eca9744c7a810e8fc3578c6cf0"><em>Scientific Hypotheses. </em>Now you need to formalize the scientific hypotheses underlying your proposed solution. Keep in mind that hypotheses need to be testable assumptions. For example, if you make the assumption that the majority of your users are teenagers, but your platform doesn\xe2\x80\x99t collect users\xe2\x80\x99 ages, then your assumption is not testable. Then, develop a plan to validate your hypothesis as you develop your solution. With respect to a technical data science solution, you can formulate your hypothesis along with one of the following themes:</p><ol id="a6d1f281b3c84e92aa08645c59d93084"><li><p id="a3d3ade3e3764b68a1af6e44f92b6435">\xe2\x80\x9cConstructive\xe2\x80\x9d: It is possible to build such a framework.</p></li><li><p id="fa33d324402b46bc9db7061fc0653df9">\xe2\x80\x9cFormative\xe2\x80\x9d: The proposed solution is \xe2\x80\x9cfast /good enough\xe2\x80\x9d</p></li><li><p id="a631425d713746b6a7ee8f2a3d40c04c">\xe2\x80\x9cEmpirical\xe2\x80\x9d: The proposed solution will significantly outperform the state-of-the-art baseline measured by a certain metric.</p></li></ol></li><li><p id="c42dcf860abb494b8ecce4229b08d236"><em>Major Features. </em>For the next step, you should describe in more specific terms how the system features you plan to implement form the proposed solution to the problem (e.g., a list of major features or components of your solution). This is really important from a &quot;traceability&quot; perspective as it&apos;s easy to miss major features as you dive deeper into the project. Here are the important requirements for the proposed features:</p><ol id="db607fe13e26470a9757a1b3606579e4"><li><p id="ce1136ff0a59439f924c6d4f8ab08dad">Features should not be technical constraints. For example, \xe2\x80\x9cthe system will use an Amazon AWS load balancer to manage traffic\xe2\x80\x9d is a bad example, while \xe2\x80\x9cthe system will use a cloud-based load balancer to manage traffic\xe2\x80\x9d is a good example.</p></li><li><p id="a95ed95a4db443708e5cccc82ea66445">Features should be distinct in the sense that no two features should overlap.</p></li><li><p id="b2a545998fb2441da8f28f917e1a1545">Features should be traceable, with a unique name or identifier, so that they can be traced across different documents and project stages.</p></li></ol></li><li><p id="fdb2b96f88f449008152fcb689720f7a"><em>Scope. </em>At this point, you will want to outline the boundaries of your project, with a focus on what will be delivered at the end of the project timeline. If there is something your project will specifically not do, you should note it here. For example, be clear about how much (or how little) data will be covered, whether your solution will meet certain run-time requirements in terms of responsiveness, whether your solution will be deployed as a web service or application or exist only as a code repository/Jupyter notebook, etc.</p></li></ul></body></workbook_page>\n'
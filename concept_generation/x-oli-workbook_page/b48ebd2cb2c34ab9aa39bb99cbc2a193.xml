<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE workbook_page PUBLIC "-//Carnegie Mellon University//DTD Workbook Page MathML 3.8//EN" "http://oli.web.cmu.edu/dtd/oli_workbook_page_mathml_3_8.dtd"><workbook_page xmlns:bib="http://bibtexml.sf.net/" xmlns:cmd="http://oli.web.cmu.edu/content/metadata/2.1/" xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:pref="http://oli.web.cmu.edu/preferences/" xmlns:theme="http://oli.web.cmu.edu/presentation/" xmlns:wb="http://oli.web.cmu.edu/activity/workbook/" id="b48ebd2cb2c34ab9aa39bb99cbc2a193"><head><title>Functional and Non-Functional Requirements </title><objref idref="fddc9352f8594dcf9e301b1159522f8d" /><objref idref="c9f8497753cb4836aae3e8011b861f25" /></head><body><table id="d3312ba6f5d64ceba840c66f10185b65" summary="" rowstyle="plain"><cite id="iddf17d8120194135a41d9d65a81849a0" /><caption><p id="fbf1f4c5f8754d29a004a4a694772c8f" /></caption><tr><td colspan="1" rowspan="1" align="left"><p id="c32153b5f8654970b61dcd7c1067b5a5"><em>Reminder: </em>The data science process emphasizes understanding business needs and objectives, and defining analytic objectives to meet the expectations of the client. The requirements gathering process will involve identifying the stakeholders, eliciting needs and defining requirements. The difference between the requirements of a traditional IT project and those of a data science project is the focus on the requirements for the analytic solution. </p></td></tr></table><p id="ed25adaa8fc84257bdb79e86b3879a51"><em>Functional Requirements</em></p><p id="e6dd14d620b44585be4ffc165d2d0033">Functional requirements define the functions of a system and how users will interact with the system. Functional requirements are derived from the user and system requirements  that are needed to satisfy the business requirements; in essence, defining the right business requirements will result in useful functional requirements that can be used to develop the proposed system. As mentioned earlier, user requirements are captured in use cases and those use cases can help the project team define the functional requirements. A <em style="italic">use case</em> will describe the interaction between the system and its users also known as <em style="italic">actors</em>. The interactions between the system and the user are known as <em style="italic">goals</em>. </p><p id="f1ae5021983f4e03970f78c00314f57e">Not all functional requirements are implemented in the first iteration of solution development. This is why functional requirements are organized by priority. High priority functional requirements must be implemented to meet the business objectives. Medium and low priority functional requirements are important but typically classed as requirements that will not affect the current business objectives. These requirements may also be implemented in later iterations or updates to the system.</p><table id="f11ec6c0f0424493acbc0f5040faf4f1" summary="" rowstyle="plain"><cite id="ie37fab97ab3c4d2fbc3661799bf25773" /><caption><p id="a1309b41b89d492cb2dce48ea0a6aa4b" /></caption><tr><td colspan="1" rowspan="1" align="left"><p id="e6483fa74e5f429785fc46f86dd57902">Traditional functional requirements considered in the software and application development process include the Business Rules, Process Flows, Audit Tracking , Transaction Handling , Reporting Requirements, Administration Functions, Authorization Requirements, and Data Management.</p><p id="e3c4138fb4e946a6b38154c4ba764249">Reading: <link href="https://ieeexplore.ieee.org/document/720574" target="new" internal="false">IEEE ANSI 830 Documentation on Functional Requirements.</link></p></td></tr></table><p id="a4c7bacfee5c4b8b90663d6d1c83c263">Requirements can be captured in different formats including user stories, use case specifications, voice of the customer, and business rules. This unit will focus on defining functional requirements from use case specifications.</p><p id="db9ae46639e1440e9ee4ee4ae057c095"><em>Decomposing User Requirements into Functional Requirements</em></p><p id="c93f6aa2967647d1b5a884cac38eed98">Initial user requirements are often written too broad to unambiguously define what the proposed system should do at each step in a solution. The danger is that the software provider will produce a system that does not meet the business objectives, because they misunderstood what the customer would consider an acceptable solution. Different forms of use case analysis are typically used to capture, discuss, and verify the details of a solution with the customer. For each expected capability or interaction (functional requirement), we work with the customer to write detailed use specifications and gather them into a single document.</p><p id="ce3d6664afaf4641b82bbd3e0a4cf3d4">The use case specification provides a textual description of a use case. As mentioned earlier, it will decompose a user requirement into functional requirements. The use case specification details the steps involved in a goal or action. Figure 4 below shows the sections of a use case specification:</p><image id="daae33fa51db480e8afdd43ce49bf6f1" src="../webcontent/Use_Case.jpg" alt="" style="inline" vertical-align="middle" height="371" width="650"><caption><p id="c7de7dc1d6e043d6829bc6b071d5a8c6">Figure 4: Use Case Specification</p></caption><popout enable="false"></popout></image><example id="a54dfac7fe654ab6a0583d11be716fba"><p id="bf3a29942ef64fc2b3b018d2b9d7471b">A business analyst (BA) has distributed questionnaires to elicit the needs of stakeholders for a proposed system for their customers. The BA analyzed the information from the questionnaire and defined some user requirements. One of the user requirements is  customer’s ability to update their billing address in the new system. This requirement describes what customers can do with the solution but it is still too ambiguous and does not tell a developer what the system should do at each step of this requirement. We will illustrate how we can simply decompose that user requirement into functional requirements. </p><p id="bb40f8e79c034a9e933ef246bc49442a"><em><em style="italic">Use Case/User Requirement</em></em>: Update billing address </p><p id="b5d3b6a176fa40aa91bbf7773e56f96c"><em style="italic">How can a customer perform this task within the system?</em></p><p id="adb0681a9b564852987b9d823cf3e4e7"><em><em style="italic">Functional Requirement for Customers (1):</em></em></p><p id="c2fd3a5f18ad4b20b775c5c7f13e63ed"><em><em style="italic">(</em></em>1) The user shall be able to view billing address in the system .</p><p id="fe6090770c4043509ab6e710528e971b">(2)<em><em style="italic"> </em></em>The user shall be able to update a billing address in the system. </p><p id="ef407f54c12c4b5581c5fb5d71b6e51c"><em><em style="italic">Functional Requirement (2):</em></em></p><p id="bea965ba975c4a9882c0facad1d814df"><em style="italic">How will the system confirm that the billing address has been updated? </em></p><p id="dd66b15fa2924bd5a09cca5583557cc8">(2) The system shall display updated customer service and billing addresses.</p><p id="dac7657cb9f34b3da6e56ffdacc9a7cb"><em style="italic">We know that a requirement must be verifiable, traceable, and unambiguous to be considered a complete requirement. The Business Analyst must ensure that these functional requirements meet the criteria for a good requirement.  </em></p><table id="d7008bcd192a4265a2edd1259c31045f" summary="" rowstyle="plain"><cite id="ia215415e99da4caa92440bab63248da8" /><caption><p id="f6332020ffe04e09810982d29ca04a09" /></caption><tr><td colspan="1" rowspan="1" align="left"><p id="f0ae525e90ac4dd7987a48c304a75194">Functional requirements considered in the software and application development process include the business rules, user and system authorization levels, authentication, and regulatory requirements.</p></td></tr></table></example><p id="db446c6deb294e0195d23e95af7c877e"><em>Non-Functional Requirements</em></p><p id="a84ccda5f7fa4b308ed6e8d638aeb2a1">Non-functional requirements (NFR) describe the performance and behavior of a system. They are also referred to as <em style="italic">operational requirements</em>. The NFRs for a traditional IT project will describe the attributes of a system including the system&apos;s scalability, usability, maintainability, performance, reliability, availability, capacity, interoperability, and security. </p><ul id="ab7e10aef9c24befa15ebe543eefe28f"><li><p id="ae50a9cdcf724e0781ff6a1ddcc2749d"><em style="italic"><em>Performance and scalability:</em></em><em> </em>Considerations for the throughput of the system when exposed to high traffic.</p></li><li><p id="fe423a856604438a8eaf8e31d33005fd"><em style="italic"><em>Usability:</em></em> The ease of use of the system as well as the ability for users to find help with navigating the system.</p></li><li><p id="e1ad20ea831b4fc796d8d674c707426e"><em style="italic"><em>Portability and compatibility:</em></em> Hardware, systems and application software, and the solution’s compatibility to other applications and processes within the existing environment.</p></li><li><p id="bc99aa169948454594a69e27ccfdfe8c"><em style="italic"><em>Availability: </em></em>This is the degree to which a system is in an operable state.</p></li><li><p id="d9c880504c7849289f265e7fcce93c14"><em style="italic"><em>Security: </em></em>The integrity of your system and data are closely related to the security rules implemented during the development process. </p></li><li><p id="e40c4a08e7604bb09a3028674426e6f5"><em style="italic"><em>Modules and Architecture</em></em>: These are requirements that have technical considerations for the system including operating system compatibility and the programming logic employed by the developers.</p><p id="cfd3765757354440bdf2d826d95e28bb"><link href="http://web.cs.mun.ca/~harold/Courses/Old/CS3718.W12/Diary/p330-parnas.pdf" target="new" internal="false">Module Requirement Specification</link><link href="https://oli.cmu.edu" target="new" internal="false">s.</link></p></li></ul><p id="a4f987ecb33745348a7b92b850999a63">Non-functional requirements focus on the user experience and take into account the system and application software, and data compliance rules. Framing a non-functional requirement for a data science project will include the above mentioned attributes and additional requirements that are related to machine learning models and AI analytic solution(s). </p><wb:inline idref="newe0716f25fc5745349105335f247c8684" purpose="didigetthis" /></body></workbook_page>

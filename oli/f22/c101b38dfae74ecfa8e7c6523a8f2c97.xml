b'<?xml version="1.0" encoding="UTF-8"?>\n<!DOCTYPE workbook_page PUBLIC "-//Carnegie Mellon University//DTD Workbook Page MathML 3.8//EN" "http://oli.web.cmu.edu/dtd/oli_workbook_page_mathml_3_8.dtd"><workbook_page xmlns:bib="http://bibtexml.sf.net/" xmlns:cmd="http://oli.web.cmu.edu/content/metadata/2.1/" xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:pref="http://oli.web.cmu.edu/preferences/" xmlns:theme="http://oli.web.cmu.edu/presentation/" xmlns:wb="http://oli.web.cmu.edu/activity/workbook/" id="c101b38dfae74ecfa8e7c6523a8f2c97"><head><title>The Basics of Cloud Computing</title></head><body><p id="b5be49fe707147c0b2d122940adc0882">In data science, you will work with large amounts of data with a variety of tools in interpreted environments. The sheer amount of data in today\xe2\x80\x99s data science systems requires a lot of experience to manage the underlying hardware, and doing so efficiently and effectively is usually prohibitively expensive to do so. Additionally, managing the security, fault-tolerance, and data governance of the systems you are working on can be incredibly difficult to do from an IT level.</p><p id="ff7d5cea77fa4f8d96eb138941cf6a2f">In situations like these, especially when you might not know the scale of the system you want to build, <em>cloud computing</em> can be a great boon to your efforts. By purchasing either Infrastructure as a Service (IaaS), Platform as a Service (PaaS), or Software as a Service (SaaS), you can choose to rely on another company to manage some aspect of the underlying hardware/software issues and focus on data science. The main benefits of cloud computing are the following:</p><ol id="ad407b5515804f359f0e35862928a3bf"><li><p id="dc141f68843a476d8a83d5e61a6eeab5">You are able to trade the cost of buying all of the hardware for your projects and managing them, for whatever cost the cloud provider asks you to pay. In practice, these costs will be based on your usage rather than the hardware itself, which can allow for savings in the long run.</p></li><li><p id="c81237a234664ea08d6ebd63429f7ce1">You do not need to worry about capacities as much. As the main cloud providers have large data systems in place, you do not need to worry about infrastructure capacity or about ensuring that systems cache as intended. Instead, you can make use of the servers that are present to accomplish your goals.</p></li><li><p id="d1f3c462faca4be28dfd56665843fe28">You can purchase these services for potentially less than what you might have thought possible. As you share the cloud with other users, you are able to pay less for more power which, along with specialized chips only available in some cloud instances, can make the cloud much cheaper for the processing power given than other systems.</p></li></ol><p id="fe5e923f63924d1484a6d683fd47eb86">For all of these reasons, the cloud is becoming the place to do data science in, especially for large and unstructured data. As a result, however, you will need to understand the cloud and use it accordingly to manage your data. In particular, you will need to pay attention to the types of storage and processing you are purchasing from the cloud. In general, there are many ways to use the cloud, but the most important factor to consider when using the cloud to host data is the <em>structure/usage patterns</em> of the underlying data.</p><ol id="b1bb5f2ea005459bbd6a5c89d0b2ad2b"><li><p id="ba96d7bfb7514340a15d65f55e39099d">For unstructured data that has high-data temperature, i.e., data that you need to read and write a lot, you should try to use a <em>block-based</em> storage system. Systems like these work like network hard drives, which can make them incredibly useful when you wish to perform large-scale processing tasks and data cleaning tasks.</p></li><li><p id="d2555f18c99e4ae68d10db6159b681bc">For large files that are low-write but high-read, an <em>object-based</em> storage system might be more beneficial. <em>Object-based</em> systems store files as key-value pairs, allowing people with the write key and access permissions to download the files accordingly. They are best for Binary Large OBject files (BLOBs) or when you might want to distribute a data file to many people to allow them to process it on their own systems.</p></li><li><p id="ebdbb60d552047f6af85c1c61f0bfd95">For structured data that you might need to write to constantly, you might want to consider a <em>relational database system</em>. These systems enforce a lot of constraints on the underlying data but, in doing so, ensure that each operation has Atomicity, Consistency, Isolation, and Durability properties. These systems use the SQL, or Structured Query Language, as a basis for every operation available and are especially important when you want consistency in your data.</p></li><li><p id="d871ed384407442dae3e7f356324c0c8">Alternatively, if your data is not structured enough to fit in the tight schema requirements of a relational database, one can try a <em>non-relational database system</em>. These systems don\xe2\x80\x99t need to adhere to the requirements of an  SQL schema structure and thus to the consistency provided but gain added flexibility and scale. Such databases allow you to store a wider variety of data and scale it up to more computers much easier than a traditional database system.</p></li></ol><p id="cc3eefec49b94e46b990e30779660a2e">Each of these systems will be useful for different use cases, and you will need to carefully consider your use case before deciding on what to use. Besides these hosting concerns, you will also need to consider the following carefully:</p><ul id="e7724d6f548344fba56b24a2e9ba36a6"><li><p id="f4cea4585ac6448fa168c42628701a26">Your Budget: As cloud resources are based on what you use, it pays to monitor your resources carefully and constantly check your usage limits. Most cloud providers have methods to monitor your usage, which can help you both understand and automatically stop extraneous usage accordingly.</p></li><li><p id="da7cc5999c6944c1aab2f60a5dee650c">Your Security: While cloud providers maintain the security of the infrastructure for you, you still need to keep in mind good practices for the security of the software you are running. Checking if your systems are vulnerable to the latest Log4J or SQL injection attack is not your main priority as a data scientist, but knowing best practices and discussing the architecture with experts is a huge priority, especially if the data in question is confidential user data.</p></li></ul><wb:inline idref="mooclet_activity" purpose="didigetthis" /></body></workbook_page>\n'
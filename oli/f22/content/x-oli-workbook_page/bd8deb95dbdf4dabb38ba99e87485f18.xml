b'<?xml version="1.0" encoding="UTF-8"?>\n<!DOCTYPE workbook_page PUBLIC "-//Carnegie Mellon University//DTD Workbook Page MathML 3.8//EN" "http://oli.web.cmu.edu/dtd/oli_workbook_page_mathml_3_8.dtd"><workbook_page xmlns:bib="http://bibtexml.sf.net/" xmlns:cmd="http://oli.web.cmu.edu/content/metadata/2.1/" xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:pref="http://oli.web.cmu.edu/preferences/" xmlns:theme="http://oli.web.cmu.edu/presentation/" xmlns:wb="http://oli.web.cmu.edu/activity/workbook/" id="bd8deb95dbdf4dabb38ba99e87485f18"><head><title>Classification Evaluation Metrics</title></head><body><section id="df54bd47e0ff4927a392d56f2efee219"><title>Confusion Matrix</title><body><p id="dada9d4c37194a9d9316736421d0b144"> </p></body></section><p id="a24f2efa850b4e668f0efa08ac38202b">Confusion Matrix (contingency table) shows how well a classifier performs compared to the ground truth labels. It is often used in a binary classification setting and has the following components:</p><ul id="a1bff9846e614d408d7fc8dec503b580"><li><p id="b195c6e7be004d8cb60003e1bfbe7337">True Positives (TP) is the number of positive data points that are correctly predicted as positive.</p></li><li><p id="e304d23c10e54b08a635c7b21e3bbe86">True Negatives (TN) is the number of negative data points that are correctly predicted as negative.</p></li><li><p id="c1c2cc8f0dd94cbdbb195100f9d362c8">False Positives (FP) is the number of negative data points that are incorrectly predicted as positive. This is also called the Type I error in statistics.</p></li><li><p id="a46e0d087c304bd0846dbfce472d5f5c">False Negatives (FN) is the number of positive data points that are incorrectly predicted as negative. This is also called the Type II error in statistics.</p></li></ul><p id="e874ec26800e4981b32d8f091224b36a">A trick for remembering these definitions is that the second term denotes what is predicted, and the first term denotes whether this prediction is correct (true) or incorrect (false). For example, false negative means the negative label is predicted but it is false (i.e., the ground truth label is positive). \\( InlineFormula=\\pi r^2 \\) OR\n\\[ BlockFormula=\\frac{1}{2} \\]</p><table id="e4e13e5e42c9431997423150091cc0b9" summary="" rowstyle="plain"><cite id="i98a01df592b043ada1c6e043e4281af8" /><caption><p id="e06a2ae7256940c0b76cb175fc888ed2" /></caption><tr><td colspan="1" rowspan="1" align="left"><p id="aeb5edf333314f5ba1c93985b09fcb53" /></td><td colspan="1" rowspan="1" align="left"><p id="ed16b52c566e4d7694fa47e3d2986eea">Ground truth \\(y = 1$</p></td><td colspan="1" rowspan="1" align="left"><p id="d844fd14d0de41d1a59f8c99ad6c2c3a">Ground truth \\(y = 0$</p></td></tr><tr><td colspan="1" rowspan="1" align="left"><p id="b098019d642c4121a5efda804c73c91f">Prediction \\(\\hat y = 1$</p></td><td colspan="1" rowspan="1" align="left"><p id="adefa990500b41559fcaf0113093f9f7">TP</p></td><td colspan="1" rowspan="1" align="left"><p id="d0732cb9725f4f32b1fd8988e5f53acd">FP</p></td></tr><tr><td colspan="1" rowspan="1" align="left"><p id="bb6f956356374300b7e41beceac536ad">Prediction \\(\\hat y = 0$</p></td><td colspan="1" rowspan="1" align="left"><p id="beac8d3ef0b649f795ba4e75cc243432">FN</p></td><td colspan="1" rowspan="1" align="left"><p id="cdd91c0cff984d38a3a2ef15ffd317ff">TN</p></td></tr></table><p id="b47b51f553364730bedcf534cf1e8f83">In a multi-class classification setting with K categories, a similar confusion matrix with K rows and K columns can be constructed, where the entry at row \\(i and column \\(j denotes the number of instances that have ground-truth label \\(j and are predicted as having label \\(i. In this case, the metrics TP, TN, FP, and FN are computed for each individual category. For example, if there are three categories A, B, and C, then the TP, TN, FP, and FN values for class A can be computed by treating A as positive and B, C together as negative.</p><section id="a9dd9b5f0fdd450dbb7dc31164ecde7d"><title>Accuracy</title><body><p id="afb2135951bd489299c2e2f0a2782e82"> </p></body></section><p id="d59731c9aaf74f7184b9c6f0b60da780">Accuracy is the number of correctly classified instances, divided by the total number of instances in the dataset.</p><p id="b91f24d7bc4d4ff6ba963014dbb165d0">$$\\text{Accuracy} = \\frac{TP+TN}{TP+FP+FN+TN}$$</p><p id="d592007e9dbb457abfdfed70f75ee153">\xe2\x80\x8b\xe2\x80\x8bThis is an intuitive measure, but should only be used when there is an even distribution of ground truth labels. If the dataset is imbalanced (e.g., there are many more negative than positive data points), accuracy can easily be inflated even by simple models. For example, if a dataset has 90% negative instances and 10% positive instances, a naive model that always predicts negative labels can already achieve an accuracy of 0.9.</p><section id="cb6851b24e0c41789f29cc4aaf41ba09"><title>Recall</title><body><p id="c5786546150b4a54b65a58480d33308f"> </p></body></section><p id="cf392cb4334e46b19032b151b7c3b339">Recall, also known as sensitivity or true positive rate, denotes the fraction of all positive instances that are correctly classified as such:</p><p id="adb6532e639f424a8e33481ecdfc503f" /><p id="b43b96314ae44e6bae2f669882ebda1d">Recall is used when you want to optimize your model to detect positive instances as best as possible, potentially at the cost of many false positives. For example, cancer detection models may aim for high recall values because predicting healthy people as having cancer (false positive) is less costly than predicting people having cancer as healthy (false negative)</p><section id="cac960c4578a4beb9ecdd20e95de7c27"><title>Specificity</title><body><p id="aafa82cef3b94442bebc95b25aa511f2"> </p></body></section><p id="e1f7d16daf7b4ae9b05f083fb4551751">Specificity, also known as true negative rate, denotes the fraction of all negative instances that are correctly classified as such:</p><p id="b1178e74f24b42d6a89c12c19021509e">$$\\text{Specificity} = \\frac{TN}{TN + FP}$$</p><p id="f1fcbf91d11d4592ad789e9ae7e28a52">It can be interpreted similarly as recall, but in this case, you prioritize detecting negative instances as best as possible.</p><section id="fe66082899c440a2a6e8246dd6c9d3cb"><title>Precision</title><body><p id="eea9fe4f95c6456ab39fbe7007bac32f"> </p></body></section><p id="b44d16be8a81406391243d7a72bec6d7">Prediction denotes the fraction of positive predictions whose ground truth label is also positive:$text{Precision} = \\frac{TP}{TP + FP}$$</p><p id="fa1d1b56dea84ea98d8f56ad0ec9e10a">Prediction is suitable when optimizing the confidence of the positive predictions in your model. For example, if the government decides to cover the health care cost of anyone who has cancer, they will choose a cancer prediction model with high precision, so that money is not wasted on false positives.</p><section id="be633d5544b8428085daf3f9fc1dfe65"><title>F1 Score</title><body><p id="a71515227b15484bb5d0edd4eeabc6d0"> </p></body></section><p id="c4cf76773314461cbbe790f3add3f881">F1 score is the harmonic mean of precision and recall:</p><p id="a6db151445f44139973fcb7f412248e6">\\(\\text{F1} = 2 \\cdot \\frac{\\text{Precision} \\times \\text{Recall}}{\\text{Precision} + \\text{Recall}}$$</p><p id="dcef1c10a09846758789dd6260df8c6f">Like accuracy, it provides a general measure of model performance, without biasing for or against a certain type of error. The differences between accuracy and F1 score are as follows:</p><ul id="af4aedf8123445d29c0d707a24a10749"><li><p id="b5e6088bfb044e25a55e3de1285a90ea">Accuracy is good for optimizing true positive and true negative, while F1 is good for optimizing false positive and false negative.</p></li><li><p id="bd8f05ed058640f2b02a94ebb8e21a9d">Accuracy is good for balanced datasets (with even distribution of the ground truth labels) while F-1 is good for imbalanced datasets.</p></li></ul><section id="b4a629e11cd44463903c3cb4b18c7eab"><title>Matthews Correlation Coefficient</title><body><p id="d38380f67b7d4953b75776dcf94fddd3"> </p></body></section><p id="cfd230de0ce2448e96316c0ed4317a80">Matthews Correlation Coefficient is a correlation coefficient between the observed and predicted binary classification. A value of +1 means a perfect prediction, 0 indicates that the classifier did the same job as you would if you randomly guessed the label, and finally -1 means the classifier misclassified all observations. MCC is symmetric, meaning that no class is more important than another (if you switch the positive and negative labels, the value of MCC is unchanged).Resource: <link href="https://scikit-learn.org/stable/modules/generated/sklearn.metrics.matthews_corrcoef.html" target="new" internal="false">MCC-</link>sci-kit learn.</p><image id="db3e0a4916544ab0aa50779c2a0bb66d" src="../webcontent/image-bd8deb95dbdf4dabb38ba99e87485f18-1.png" alt="" style="inline" vertical-align="middle" height="70" width="468"><caption><p id="c71bf33e336e46a9afaf83ba09e8cbb7" /></caption><popout enable="false"></popout></image><section id="f405b53da49e44b1ad3ca0e86449499e"><title>Logistic Loss (Log loss)</title><body><p id="d988ed900fc846c281300cf0dc48cb98"> </p></body></section><p id="c3da024bebe74cfd9b5dd3eaf78b2706">If your model outputs a probability value $\\hat y$ that an input data point has the positive label, it can be evaluated by the logistic loss</p><p id="ad48357015824a4fad20656e92f21fcb">$$L(\\hat y, y) = y \\log(\\hat y) + (1 - y) \\log (1 - \\hat y),$$</p><p id="f2f53f4f85fb4c7fb8a2a750b8375150">where $y$ is the ground truth label. The logistic loss is a value between 0 and 1; the lower the loss, the better your model is. Different from the metrics introduced so far, the logistic loss is differentiable and often used as the target loss function during model training.</p><section id="dbb2da4d9e014430a2a9c3b03e2d4749"><title>ROC Curve: Receiver Operating Characteristic</title><body><p id="a53b7e015d5045afaf03944292d19fa7"> </p></body></section><p id="bdb5e31605764b5a967dcf438f030563">The ROC curve is a chart that shows the performance of a classifier by highlighting the true positive rate against the false-positive rate at certain thresholds. Alternatively, it can be considered as expressing the sensitivity as a function of the false-positive rate. Area Under the ROC Curve otherwise known as AUC measures the entire area underneath the ROC curve and it is the measure of the classifier&apos;s ability to distinguish between classes. It also provides a measure of performance across different thresholds. The AUC measures how well predictions are ranked and the quality of the prediction. AUC might not be useful for certain scenarios such as it does not tell you much about the &quot;cost of different errors,&quot; instead of giving similar weight to all errors. The general interpretation of the chart is that the higher the AUC, the better the model is at its task of distinguishing between classes, e.g., the model has predicted observations that are apples as apples and observations that are not apples as not apples.<image id="bc3d94a5894e4684b6ef08f00a5e01aa" src="../webcontent/image-bd8deb95dbdf4dabb38ba99e87485f18-2.png" alt="" style="inline" vertical-align="middle" height="248" width="271"><caption><p id="ec3aad8ef2f9461a86dd498eb45e6bb2" /></caption><popout enable="false"></popout></image></p></body></workbook_page>\n'